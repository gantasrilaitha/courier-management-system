package com.example.demo;

import jakarta.persistence.Entity;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.Data;
import lombok.Getter;// getter anootation 
import lombok.Setter;//setter annotation
// Getter & setter annotation when used at class level, applies to all attributes of the class
//If you apply them at the field level, it only generates getters and setters for that specific field

@Data // generates getters & setters for all properties in the class defined(so need
      // not deine them explicitly)
@Table(name = "admin") // change table name of the below defined class (Admin) to (admin)
@Entity // maps below class(Admin) to (Admin) table in db (if it exists in db)
// else @Table is used to map below defined class to table name specified in
// @Table in the db
// @Column: used to change column name

public class Admin {

    @Id // assigns id to each row generated by below statement as primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY)

    // @GeneratedValue(strategy = GenerationType.AUTO)--> assigns ramdomly
    // increasing nos. to each row & considered as primary key
    // Creates a new table containing only randomly increasing nos (ex: emp_seq,
    // emp:table_name)
    // to custom the seq table name, use the below 2 statements:
    // @GeneratedValue(strategy = GenerationType.AUTO. generator="empid_generator")
    // @SequenceGenerator(name = "empid_generator", initialValue = 1, allocationSize
    // = 1) // -->increment no. by +1
    // starting from 1
    private String username;
    private String password;

}